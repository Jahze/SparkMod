// Generated by CoffeeScript 1.6.2
var doSearch, getModSubscribeHandler, getMods, getPageLink, now, server_loading_html, updateModSubscribeStatus, _modPageNumber, _searchText, _subscribedMods;

server_loading_html = "<html><head><meta http-equiv='refresh' content='5'></head><body>Loading server...<body></html>";

now = function() {
  return new Date().getTime() / 1000;
};

_modPageNumber = 1;

_subscribedMods = {};

_searchText = "";

updateModSubscribeStatus = function(id) {
  var selector;

  selector = $("#modbrowser_mod_" + id).find(".modbrowser_mod_subscribe");
  if (_subscribedMods[id]) {
    return selector.addClass("subscribed");
  } else {
    return selector.removeClass("subscribed");
  }
};

getModSubscribeHandler = function(id) {
  return function() {
    if (_subscribedMods[id]) {
      _subscribedMods[id] = null;
    } else {
      _subscribedMods[id] = true;
      $.get("/?request=installmod&modid=" + id);
    }
    return updateModSubscribeStatus(id);
  };
};

getPageLink = function(pageNumber, currentPage) {
  if (pageNumber !== currentPage) {
    return "<a href='#'>" + pageNumber + "</a>";
  } else {
    return pageNumber;
  }
};

getMods = function(pageNumber) {
  var request_mods;

  $("#modbrowser_loading").show();
  request_mods = function() {
    var requested_at;

    requested_at = now();
    return $.ajax({
      url: "/",
      data: {
        request: "getmods",
        searchtext: _searchText,
        p: pageNumber
      },
      success: function(data) {
        var currentPage, first, i, last, latency, mod, mods, numPages, numPerPage, pageRange, pageRangeEnd, pageRangeStart, pages, total, _i, _len;

        if (data === server_loading_html) {
          setTimeout(request_mods, 4000);
          return;
        }
        if (data != null ? data.loading : void 0) {
          latency = (now() - requested_at) / 2;
          setTimeout(request_mods, Math.max(100, 350 - latency * 1000));
          return;
        }
        $("#modbrowser_mods").empty();
        if ((data != null ? data.items : void 0) != null) {
          mods = data.items;
          i = 0;
          for (_i = 0, _len = mods.length; _i < _len; _i++) {
            mod = mods[_i];
            $("#modbrowser_mods").append(tmpl("modbrowser_mod", mod));
            $("#modbrowser_mod_" + mod.id).find(".modbrowser_mod_subscribe").click(getModSubscribeHandler(mod.id));
            updateModSubscribeStatus(mod.id);
          }
        }
        if ((data != null ? data.range : void 0) != null) {
          first = data.range.first;
          last = data.range.last;
          total = data.range.total;
          numPerPage = 9;
          currentPage = Math.floor(first / numPerPage) + 1;
          numPages = Math.ceil(total / numPerPage);
          _modPageNumber = currentPage;
          pageRange = 5;
          pageRangeStart = currentPage - (pageRange - 1) / 2;
          pageRangeEnd = pageRangeStart + pageRange;
          if (pageRangeStart < 1) {
            pageRangeStart = 1;
          }
          if (pageRangeEnd > numPages) {
            pageRangeEnd = numPages;
          }
          pages = "";
          if (pageRangeStart > 1) {
            pages += getPageLink(1, currentPage) + " ";
            if (pageRangeStart > 2) {
              pages += "... ";
            }
          }
          i = pageRangeStart;
          while (i <= pageRangeEnd) {
            pages += " " + getPageLink(i, currentPage) + " ";
            ++i;
          }
          if (pageRangeEnd < numPages && pageRangeEnd > 1) {
            pages += "... " + getPageLink(numPages, currentPage);
          }
          $("#modbrowser_pages").html(pages).find("a").click(function() {
            return getMods(parseInt($(this).text()));
          });
        }
        return $("#modbrowser_loading").hide();
      },
      error: function(err) {
        return setTimeout(request_mods, 3000);
      }
    });
  };
  return request_mods();
};

doSearch = function() {
  _modPageNumber = 1;
  _searchText = $("#modbrowser_search").val();
  return getMods(_modPageNumber);
};

$(document).ready(function() {
  $("#modbrowser_prev_button").button().click(function() {
    if (_modPageNumber > 1) {
      --_modPageNumber;
      return getMods(_modPageNumber);
    }
  });
  $("#modbrowser_next_button").button().click(function() {
    ++_modPageNumber;
    return getMods(_modPageNumber);
  });
  $("#modbrowser_search_button").button().click(doSearch);
  $("#modbrowser_search").keypress(function(e) {
    if (e.which === 13) {
      e.preventDefault();
      doSearch();
      return false;
    }
  });
  return getMods(_modPageNumber);
});
